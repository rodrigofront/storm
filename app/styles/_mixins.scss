//---------------------------------------------------------------------------
// Utils
//---------------------------------------------------------------------------
@mixin prefix ($property, $value) {
    @each $prefix in -webkit-, -moz-, -ms-, -o-, "" {
        #{$prefix}#{$property}: $value;
    }
}

@mixin opacity ($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin text-middle ($height, $line-height: $height) {
    height: $height;
    line-height: $line-height;
}

@mixin circle ($size) {
    width: $size;
    height: $size;
    border-radius: $size;
}

@mixin border-radius-bottom($radius) {
    -webkit-border-bottom-right-radius: $radius;
    -webkit-border-bottom-left-radius: $radius;
    -moz-border-radius-bottomright: $radius;
    -moz-border-radius-bottomleft: $radius;
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin filter-gradient ($from, $to, $dir: vertical) {
    $gradient-type: if($dir == vertical, 0, 1);
    filter: progid:DXImageTransform.Microsoft.gradient(gradientType=#{$gradient-type}, startColorstr=#{ie-hex-str($from)}, endColorstr=#{ie-hex-str($to)});
}

@mixin arrow ($width, $height, $direction, $color) {
    width: 0;
    height: 0;

    // Right
    @if ($direction == right) {
        border-top: $height/2 solid transparent;
        border-bottom: $height/2 solid transparent;
        border-left: $width solid $color;
    }

    // Left
    @if ($direction == left) {
        border-top: $height/2 solid transparent;
        border-bottom: $height/2 solid transparent;
        border-right: $width solid $color;
    }

    // Up
    @if ($direction == top) {
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-bottom: $height solid $color;
    }

    // Down
    @if ($direction == bottom) {
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-top: $height solid $color;
    }
}


//---------------------------------------------------------------------------
// Responsive Utils
//---------------------------------------------------------------------------
// desktop view
@mixin desktop-view {
    @media screen and (min-width: 1025px) {
        @content;
    }
}

// tablet view
@mixin tablet-view {
    @media screen and (min-width: 768px) and (max-width: 1024px) {
        @content;
    }
}

// mobile view
@mixin mobile-view {
    @media screen and (max-width: 767px) {
        @content;
    }
}

// view
@mixin view ($t1, $t2: "", $t3: "") {
    $types: ($t1, $t2, $t3);
    $media: "";

    @each $type in $types {
        @if ($type == "desktop") {
            $media: "(min-width: 1025px)";
        }
        @if ($type == "tablet") {
            $media: "(min-width: 768px) and (max-width: 1024px)";
        }
        @if ($type == "mobile") {
            $media: "(max-width: 767px)";
        }

        @media screen and #{$media} {
            @content;
        }
    }
}


//---------------------------------------------------------------------------
// Placeholders Fallback
//---------------------------------------------------------------------------
// grid
@mixin grid-padding {
    padding-left: 10px;
    padding-right: 10px;
}

@mixin grid-zero-padding {
    padding-left: 0;
    padding-right: 0;
}

// utils
@mixin text-overflow {
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin clearfix {
    &:before,
    &:after {
        display: block;
        overflow: hidden;

        height: 0;

        content: "\0020";
    }

    &:after {
        clear: both;
    }
}


//---------------------------------------------------------------------------
// Selectors
//---------------------------------------------------------------------------
// grid
@mixin grid-selector ($selector: "") {
    #{$selector} [class^='grid-'],
    #{$selector} [class*=' grid-'],
    #{$selector} [class^='tablet-grid-'],
    #{$selector} [class*=' tablet-grid-'],
    #{$selector} [class^='mobile-grid-'],
    #{$selector} [class*=' mobile-grid-'] {
        @content;
    }
}

// field
@mixin field-selector ($selector: "") {
    #{$selector} .field-text,
    #{$selector} .field-textarea,
    #{$selector} .field-select {
        @content;
    }
}


//---------------------------------------------------------------------------
// Mixin forms
//---------------------------------------------------------------------------
// button variant
@mixin button-variant ($color, $text-shadow, $border, $bg-from, $bg-to) {
    @include filter-gradient($bg-from, $bg-to);

    background-color: $bg-to;
    background-image: linear-gradient(180deg, $bg-from 0, $bg-to 100%);
    border-color: $border;

    color: $color;
    text-shadow: 0 1px 2px $text-shadow;

    &:hover,
    &:focus {
        background: $bg-from;
        filter: none;
        text-decoration: none;
    }
}
